import streamlit as st
import datetime

# 별자리 계산 함수
def get_zodiac(month, day):
    zodiacs = [
        ("물병자리", (1, 20), (2, 18)),
        ("물고기자리", (2, 19), (3, 20)),
        ("양자리", (3, 21), (4, 19)),
        ("황소자리", (4, 20), (5, 20)),
        ("쌍둥이자리", (5, 21), (6, 21)),
        ("게자리", (6, 22), (7, 22)),
        ("사자자리", (7, 23), (8, 22)),
        ("처녀자리", (8, 23), (9, 22)),
        ("천칭자리", (9, 23), (10, 22)),
        ("전갈자리", (10, 23), (11, 22)),
        ("사수자리", (11, 23), (12, 21)),
        ("염소자리", (12, 22), (1, 19)),
    ]
    for zodiac, (start_month, start_day), (end_month, end_day) in zodiacs:
        if (month == start_month and day >= start_day) or (month == end_month and day <= end_day):
            return zodiac
    return "알 수 없음"

# 별자리별 연애 성향
love_traits = {
    "물병자리": "자유로운 영혼으로, 연애에서도 친구 같은 관계를 선호하며 상대에게 간섭을 싫어합니다. "
             "개성과 지적인 대화를 중시하며, 독창적인 연애 방식을 좋아합니다.",
    "물고기자리": "감수성이 풍부하고 헌신적인 사랑을 추구합니다. 상대의 감정을 잘 공감하고, "
              "때로는 자기 자신보다 상대를 더 우선시하는 면이 있습니다.",
    "양자리": "열정적이고 직설적인 연애 스타일을 가집니다. 적극적이고 빠르게 관계를 발전시키는 것을 좋아하지만, "
           "가끔은 성급해 보일 수도 있습니다.",
    "황소자리": "안정적이고 신뢰를 바탕으로 한 사랑을 원합니다. 느리지만 깊은 사랑을 추구하며, "
            "한 번 마음을 주면 변함이 없습니다.",
    "쌍둥이자리": "호기심 많고 유쾌한 연애를 합니다. 다양한 대화와 활동을 통해 즐거움을 찾으며, "
             "자유로운 분위기를 선호합니다.",
    "게자리": "따뜻하고 가정적인 사랑을 원합니다. 상대에게 헌신적이며 안정감을 주지만, "
           "때때로 집착이 강할 수 있습니다.",
    "사자자리": "자신감 넘치고 열정적인 연애 스타일을 가집니다. 사랑을 표현하는 데 아낌이 없으며, "
            "상대방에게도 진심 어린 애정을 원합니다.",
    "처녀자리": "세심하고 현실적인 연애관을 가지고 있습니다. 작은 부분까지 신경 쓰며 상대를 배려하지만, "
             "때로는 까다로워 보일 수 있습니다.",
    "천칭자리": "밸런스와 조화를 중요하게 생각합니다. 상대방과의 공감대를 중시하며, 함께하는 시간을 즐깁니다. "
             "낭만적인 면모도 강합니다.",
    "전갈자리": "강렬하고 깊은 사랑을 추구합니다. 집착이 강할 수 있지만, 진심으로 사랑하면 헌신적이고 열정적입니다.",
    "사수자리": "자유롭고 모험적인 연애를 선호합니다. 상대방과 함께 새로운 경험을 하고 싶어 하며, "
             "구속되는 것을 싫어합니다.",
    "염소자리": "신중하고 책임감 있는 연애를 추구합니다. 쉽게 마음을 열지 않지만, 진지하게 연애에 임하며 "
             "현실적인 안정감을 줍니다."
}

# 별자리 궁합 (잘 맞는 포인트 확장)
compatibility = {
    ("물병자리", "쌍둥이자리"): {
        "summary": "두 별자리는 자유롭고 지적인 대화 속에서 잘 맞습니다.",
        "details": {
            "대화 스타일": "서로 지적인 주제와 다양한 관심사를 공유하며 대화가 끊기지 않습니다.",
            "감정 표현": "둘 다 집착하지 않고 자유롭게 감정을 나누어 편안합니다.",
            "가치관": "새로운 경험과 개성을 존중하는 공통점이 있어 잘 맞습니다.",
            "연애 속도": "빠르게 가까워지지만 서로에게 부담을 주지 않습니다.",
            "장단점 조율": "자유를 존중하면서도 필요할 때는 진지한 대화로 균형을 찾습니다."
        }
    },
    ("게자리", "전갈자리"): {
        "summary": "깊은 감정 교류로 끈끈한 유대감을 형성하는 궁합입니다.",
        "details": {
            "대화 스타일": "감정에 솔직하며 진지한 대화로 서로를 이해합니다.",
            "감정 표현": "헌신적이고 강한 애정 표현을 주고받습니다.",
            "가치관": "가정과 안정, 깊은 신뢰를 중시하는 공통점이 있습니다.",
            "연애 속도": "천천히 깊어지며 시간이 지날수록 더 단단해집니다.",
            "장단점 조율": "게자리의 따뜻함과 전갈자리의 열정이 어우러져 균형을 이룹니다."
        }
    },
    ("사자자리", "천칭자리"): {
        "summary": "낭만적이고 즐거운 연애를 할 수 있는 조합입니다.",
        "details": {
            "대화 스타일": "사교적이고 밝은 분위기 속에서 대화가 즐겁습니다.",
            "감정 표현": "사자자리의 적극적인 표현과 천칭자리의 낭만적인 표현이 어울립니다.",
            "가치관": "사랑에서의 즐거움과 사회적 활동을 중시하는 공통점이 있습니다.",
            "연애 속도": "빠르게 가까워지고 즐겁게 발전합니다.",
            "장단점 조율": "사자의 주도성과 천칭의 조화 감각이 잘 어울립니다."
        }
    }
}

def check_compatibility(zodiac1, zodiac2):
    pair = (zodiac1, zodiac2)
    reverse_pair = (zodiac2, zodiac1)
    if pair in compatibility:
        return compatibility[pair]
    elif reverse_pair in compatibility:
        return compatibility[reverse_pair]
    else:
        return {
            "summary": f"{zodiac1}와 {zodiac2}는 특별한 조합은 아니지만 서로의 차이를 존중한다면 좋은 관계를 만들 수 있습니다.",
            "details": {
                "대화 스타일": "서로 다른 방식의 대화를 이해하려는 노력이 필요합니다.",
                "감정 표현": "감정 표현의 차이가 있을 수 있으나 존중한다면 보완이 가능합니다.",
                "가치관": "가치관 차이를 인정하고 조율하는 과정에서 성숙해질 수 있습니다.",
                "연애 속도": "속도의 차이를 조율해야 하지만 서로를 이해하면 맞춰갈 수 있습니다.",
                "장단점 조율": "차이를 이해하고 맞춰가려는 태도가 관계를 더욱 단단하게 만듭니다."
            }
        }

# Streamlit UI
st.title("🌌 별자리 연애 궁합 테스트")

st.header("본인 정보 입력")
name1 = st.text_input("이름 (본인)")
birth1 = st.date_input("생년월일 (본인)", min_value=datetime.date(1900, 1, 1))
gender1 = st.radio("성별 (본인)", ["남성", "여성"])

st.header("상대방 정보 입력")
name2 = st.text_input("이름 (상대방)")
birth2 = st.date_input("생년월일 (상대방)", min_value=datetime.date(1900, 1, 1))
gender2 = st.radio("성별 (상대방)", ["남성", "여성"])

if st.button("궁합 보기"):
    zodiac1 = get_zodiac(birth1.month, birth1.day)
    zodiac2 = get_zodiac(birth2.month, birth2.day)

    st.subheader(f"✨ {name1}님의 별자리: {zodiac1}")
    st.write(f"연애 성향: {love_traits[zodiac1]}")

    st.subheader(f"✨ {name2}님의 별자리: {zodiac2}")
    st.write(f"연애 성향: {love_traits[zodiac2]}")

    st.subheader("💞 두 사람의 궁합 결과")
    result = check_compatibility(zodiac1, zodiac2)
    st.write(result["summary"])

    st.write("#### 잘 맞는 포인트")
    for key, value in result["details"].items():
        st.write(f"- **{key}**: {value}")
